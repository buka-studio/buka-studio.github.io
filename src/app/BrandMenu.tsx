"use client";
import {
  ContextMenu,
  ContextMenuContent,
  ContextMenuItem,
  ContextMenuTrigger,
} from "./ui/ContextMenu";

import { TextIcon } from "@radix-ui/react-icons";
import { useTheme } from "next-themes";
import BukaLogoOutline from "../../public/logomark-outline.svg";
import BukaLogo from "../../public/logomark.svg";

import { toast } from "./ui/Toast";
import { getBrandColor } from "./util";

const LogoType = ({ fill }: { fill: string }) =>
  `<svg xmlns="http://www.w3.org/2000/svg" width="317" height="61" fill="none"><path fill="${fill}" d="M22.416 38.781C33.833 35.09 42.26 24.751 43.138 12.33H7v36.327h36.328V27.695a41.286 41.286 0 0 1-20.912 11.086ZM55.36 49V12.3H68.8c2.603 0 4.76.43 6.468 1.29 1.708.85 2.987 2.002 3.835 3.46.848 1.445 1.272 3.076 1.272 4.891 0 1.53-.28 2.82-.842 3.871a6.935 6.935 0 0 1-2.258 2.509 9.947 9.947 0 0 1-3.082 1.362v.358c1.218.06 2.407.454 3.566 1.183 1.17.717 2.138 1.738 2.903 3.064.764 1.326 1.147 2.939 1.147 4.838 0 1.876-.442 3.56-1.326 5.054-.873 1.481-2.222 2.658-4.05 3.53-1.828.86-4.164 1.29-7.007 1.29H55.36Zm5.537-4.749h7.992c2.652 0 4.551-.513 5.698-1.54 1.147-1.028 1.72-2.312 1.72-3.853a6.046 6.046 0 0 0-.878-3.19c-.585-.968-1.421-1.738-2.508-2.312-1.076-.573-2.354-.86-3.835-.86h-8.19v11.755Zm0-16.074h7.418c1.243 0 2.36-.238 3.351-.716 1.004-.478 1.798-1.147 2.383-2.007.598-.872.896-1.9.896-3.082 0-1.518-.531-2.79-1.594-3.817-1.064-1.028-2.694-1.541-4.892-1.541h-7.563v11.163Zm41.457 9.408v-16.11h5.376V49h-5.268v-4.767h-.287c-.633 1.47-1.649 2.694-3.046 3.674-1.386.968-3.112 1.451-5.18 1.451-1.767 0-3.332-.388-4.694-1.164-1.35-.789-2.413-1.954-3.19-3.495-.764-1.54-1.147-3.446-1.147-5.716V21.476h5.358v16.862c0 1.875.52 3.369 1.56 4.48 1.039 1.11 2.389 1.666 4.05 1.666 1.003 0 2-.25 2.992-.752 1.003-.502 1.834-1.26 2.491-2.276.669-1.016.997-2.306.985-3.87Zm14.475 2.079-.035-6.54h.931l10.967-11.649h6.415L122.6 34.736h-.843l-4.928 4.928ZM111.902 49V12.3h5.358V49h-5.358Zm17.382 0-9.856-13.081 3.691-3.745L135.86 49h-6.576Zm15.689.61c-1.744 0-3.321-.323-4.731-.968-1.41-.657-2.527-1.607-3.351-2.85-.812-1.242-1.218-2.765-1.218-4.57 0-1.552.298-2.83.896-3.834a6.605 6.605 0 0 1 2.419-2.383c1.015-.586 2.15-1.028 3.404-1.326a33.874 33.874 0 0 1 3.835-.681l4.014-.466c1.028-.131 1.774-.34 2.24-.627.466-.287.699-.753.699-1.398v-.126c0-1.564-.442-2.777-1.326-3.637-.872-.86-2.174-1.29-3.906-1.29-1.804 0-3.226.4-4.265 1.2-1.028.789-1.739 1.667-2.133 2.634l-5.035-1.146c.597-1.673 1.469-3.023 2.616-4.05a10.614 10.614 0 0 1 3.996-2.258 15.598 15.598 0 0 1 4.749-.717c1.099 0 2.264.131 3.494.394a10.23 10.23 0 0 1 3.477 1.398c1.087.681 1.977 1.655 2.67 2.921.692 1.254 1.039 2.885 1.039 4.892V49h-5.233v-3.763h-.215c-.346.693-.866 1.374-1.559 2.043s-1.583 1.224-2.67 1.666c-1.087.442-2.389.663-3.906.663Zm1.165-4.301c1.481 0 2.747-.293 3.799-.878 1.063-.586 1.869-1.35 2.419-2.294a5.954 5.954 0 0 0 .842-3.065v-3.547c-.191.19-.561.37-1.111.537-.538.155-1.153.293-1.846.412-.693.108-1.368.21-2.025.305-.657.083-1.206.155-1.648.215a13.27 13.27 0 0 0-2.849.663c-.849.31-1.53.759-2.043 1.344-.502.573-.753 1.338-.753 2.294 0 1.326.49 2.33 1.469 3.01.98.67 2.228 1.004 3.746 1.004Zm47.3-23.368c-.191-1.696-.98-3.01-2.366-3.942-1.385-.944-3.129-1.415-5.232-1.415-1.505 0-2.807.238-3.907.716-1.099.466-1.953 1.111-2.562 1.936-.597.812-.896 1.738-.896 2.777 0 .872.203 1.625.609 2.258a5.47 5.47 0 0 0 1.631 1.595c.681.418 1.41.77 2.186 1.057.777.275 1.523.502 2.24.681l3.584.932c1.171.287 2.371.675 3.602 1.165 1.23.49 2.371 1.134 3.422 1.935 1.052.8 1.9 1.792 2.545 2.975.657 1.182.986 2.598.986 4.247 0 2.078-.538 3.924-1.613 5.537-1.063 1.612-2.61 2.885-4.641 3.816-2.019.932-4.462 1.398-7.329 1.398-2.748 0-5.125-.436-7.132-1.308-2.007-.872-3.578-2.108-4.713-3.71-1.135-1.612-1.762-3.523-1.882-5.733h5.555c.108 1.326.538 2.43 1.29 3.315.765.872 1.739 1.523 2.921 1.953 1.195.418 2.503.627 3.925.627 1.565 0 2.956-.245 4.175-.735 1.231-.501 2.198-1.194 2.903-2.078.705-.896 1.057-1.942 1.057-3.136 0-1.087-.31-1.977-.932-2.67-.609-.693-1.439-1.267-2.49-1.72a24.349 24.349 0 0 0-3.531-1.201l-4.336-1.183c-2.939-.8-5.268-1.977-6.989-3.53-1.708-1.553-2.562-3.608-2.562-6.164 0-2.115.573-3.96 1.72-5.537s2.7-2.802 4.659-3.674c1.959-.884 4.169-1.326 6.63-1.326 2.485 0 4.677.436 6.577 1.308 1.911.872 3.417 2.073 4.516 3.602 1.099 1.517 1.672 3.261 1.72 5.232h-5.34Zm21.849-.465v4.3h-15.034v-4.3h15.034Zm-11.003-6.595h5.358v26.037c0 1.04.156 1.822.466 2.348.311.513.711.866 1.201 1.057.502.18 1.045.269 1.631.269.43 0 .806-.03 1.129-.09.322-.06.573-.107.752-.143l.968 4.426c-.311.12-.753.239-1.326.358-.574.132-1.29.203-2.151.215-1.409.024-2.723-.227-3.942-.752a6.768 6.768 0 0 1-2.957-2.437c-.752-1.1-1.129-2.48-1.129-4.14V14.881Zm31.338 22.704v-16.11h5.376V49h-5.268v-4.767h-.287c-.633 1.47-1.649 2.694-3.047 3.674-1.385.968-3.112 1.451-5.178 1.451-1.768 0-3.333-.388-4.695-1.164-1.35-.789-2.413-1.954-3.19-3.495-.764-1.54-1.147-3.446-1.147-5.716V21.476h5.358v16.862c0 1.875.52 3.369 1.559 4.48 1.04 1.11 2.389 1.666 4.05 1.666 1.004 0 2.001-.25 2.993-.752 1.003-.502 1.833-1.26 2.49-2.276.669-1.016.998-2.306.986-3.87Zm19.851 11.953c-2.222 0-4.205-.568-5.949-1.703-1.732-1.147-3.094-2.777-4.086-4.892-.979-2.126-1.469-4.677-1.469-7.651 0-2.975.496-5.52 1.487-7.634 1.004-2.115 2.377-3.734 4.122-4.856 1.744-1.123 3.721-1.685 5.931-1.685 1.708 0 3.082.287 4.121.86 1.052.562 1.864 1.219 2.438 1.971.585.753 1.039 1.416 1.361 1.99h.323V12.3h5.358V49h-5.233v-4.283h-.448c-.322.586-.788 1.255-1.397 2.007-.598.753-1.422 1.41-2.473 1.971-1.051.562-2.413.843-4.086.843Zm1.183-4.57c1.541 0 2.843-.406 3.906-1.218 1.075-.825 1.888-1.966 2.437-3.423.562-1.457.843-3.154.843-5.09 0-1.91-.275-3.583-.825-5.017-.549-1.433-1.356-2.55-2.419-3.35-1.063-.801-2.377-1.201-3.942-1.201-1.613 0-2.957.418-4.032 1.254-1.075.836-1.888 1.977-2.437 3.423-.538 1.445-.807 3.076-.807 4.892 0 1.84.275 3.494.825 4.964.549 1.469 1.362 2.634 2.437 3.494 1.087.848 2.425 1.272 4.014 1.272ZM273.729 49V21.476h5.358V49h-5.358Zm2.706-31.771c-.932 0-1.732-.311-2.401-.932-.657-.633-.985-1.386-.985-2.258 0-.884.328-1.637.985-2.258a3.37 3.37 0 0 1 2.401-.95c.932 0 1.727.317 2.384.95.669.621 1.003 1.374 1.003 2.258 0 .872-.334 1.625-1.003 2.258-.657.621-1.452.932-2.384.932Zm18.427 32.327c-2.581 0-4.832-.592-6.756-1.774-1.923-1.183-3.417-2.838-4.48-4.964-1.063-2.127-1.595-4.612-1.595-7.455 0-2.855.532-5.352 1.595-7.49 1.063-2.139 2.557-3.8 4.48-4.982 1.924-1.182 4.175-1.774 6.756-1.774 2.58 0 4.832.591 6.756 1.774 1.923 1.183 3.416 2.843 4.479 4.982 1.064 2.138 1.595 4.635 1.595 7.49 0 2.843-.531 5.328-1.595 7.455-1.063 2.126-2.556 3.78-4.479 4.964-1.924 1.182-4.176 1.774-6.756 1.774Zm.018-4.498c1.672 0 3.058-.442 4.157-1.326 1.099-.884 1.912-2.061 2.437-3.53.538-1.47.807-3.089.807-4.857 0-1.756-.269-3.369-.807-4.838-.525-1.481-1.338-2.67-2.437-3.566-1.099-.896-2.485-1.344-4.157-1.344-1.685 0-3.082.448-4.193 1.344-1.099.896-1.918 2.085-2.455 3.566-.526 1.47-.789 3.082-.789 4.838 0 1.768.263 3.387.789 4.857.537 1.469 1.356 2.646 2.455 3.53 1.111.884 2.508 1.326 4.193 1.326Z"/></svg>`;

const Icon = ({ fill }: { fill: string }) =>
  `<svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" fill="none"><path fill="${fill}" d="M27.16 46.601C47.271 40.097 62.12 21.885 63.666 0H0v64h64V27.07c-9.928 9.767-22.642 16.711-36.84 19.531Z"/></svg>`;

const toastProps = {
  dismissible: true,
  className: "group-[.toaster]:!text-brand",
};

async function copyIcon(color: string) {
  try {
    await navigator.clipboard.writeText(Icon({ fill: color }));
    toast("Copied Icon as SVG!", toastProps);
  } catch (error) {
    toast.error("Failed to copy Icon as SVG.", toastProps);
  }
}

async function copyLogotype(color: string) {
  try {
    await navigator.clipboard.writeText(LogoType({ fill: color }));
    toast("Copied Logotype as SVG!", toastProps);
  } catch (error) {
    toast.error("Failed to copy Logotype as SVG.", toastProps);
  }
}

export default function BrandMenu({ children }: { children: React.ReactNode }) {
  const { resolvedTheme } = useTheme();

  return (
    <ContextMenu>
      <ContextMenuTrigger className="text-base flex items-center gap-2 ">
        {children}
      </ContextMenuTrigger>
      <ContextMenuContent className="text-muted-foreground">
        <ContextMenuItem
          className="flex gap-2"
          onClick={() => copyIcon(getBrandColor())}
        >
          <BukaLogo className="h-[15px] w-[15px] text-inherit" /> Copy Icon as
          SVG
        </ContextMenuItem>
        <ContextMenuItem
          className="flex gap-2"
          onClick={() => copyLogotype(getBrandColor())}
        >
          <TextIcon /> Copy Logotype as SVG
        </ContextMenuItem>
        <ContextMenuItem disabled className="flex gap-2">
          <BukaLogoOutline className="h-[15px] w-[15px] text-inherit" /> Brand
          Assets (WIP)
        </ContextMenuItem>
      </ContextMenuContent>
    </ContextMenu>
  );
}
